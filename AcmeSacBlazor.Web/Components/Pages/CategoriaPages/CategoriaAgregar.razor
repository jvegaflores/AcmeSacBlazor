@page "/categoria/Agregar"
@page "/categoria/Modificar/{Id:int}"

@inject ICategoriaRepositorio _categoriaRepositorio
@inject NavigationManager _navigatorManager

@if (Procesando)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/Images/Loading.gif" alt="Cargando contenido ..." />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient m-lg-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2"> @(Id>0?"Modificar ":"Agregar") categoria</h2>
                </div>
            </div>
        </div>

        <div class="card-body py-4">
            <EditForm Model="categoria" FormName="frm_categoria_mnt" OnInvalidSubmit="agregarCategoria">
                <DataAnnotationsValidator/>

                    <div class="border p-3 mt-4">
                        <div class="form-floating py-3 col-12">
                            <InputTex @bind-value ="categoria.nom_categoria" class="form-control" id="nom_categoria" placeholder="Nombre categoria"/>
                            <label for="nom_categroia"> Nombre de categoria</label>
                            <ValidationMessage For="@(()=>categoria.nom_categoria)"/>
                        </div>
                    </div>
            </EditForm>


        </div>

    </div>
}
@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    private Categoria categoria { get; set; } = new Categoria();

    private bool Procesando { get; set; } = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //Procesando = true;
            //await Task.Delay(2000);
            await CargaCategorias();
            Procesando = false;
            StateHasChanged();
        }
        //return base.OnAfterRenderAsync(firstRender);
    }

    private async Task CargaCategorias()
    {
        if (Id > 0)
        {
            categoria = await _categoriaRepositorio.GetOneAsync(Id);
        }
    }

    private async Task agregarCategoria()
    {
        Procesando = true;
        if (categoria.Id == 0)
        {
            //Crear
            await _categoriaRepositorio.AgregarAsync(categoria);
        }
        else
        {
            //Modificar
            await _categoriaRepositorio.ModificarAsync(categoria);

        }
        Procesando = false;
        _navigatorManager.NavigateTo("categoria");
    }

}
